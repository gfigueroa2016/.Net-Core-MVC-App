@model PaginatedList<Web.Client.Models.Employee>

<h1>Employees</h1>

<form>
    <p>
        Employee: <input type="text" name="SearchString" id="searchField" />
    </p>
</form>
<br>
<div>
    <a asp-action="Create">Create</a>
</div>
<br>

<partial name="_GetEmployees" />

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Employees"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Employees"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>

@section Scripts
{
    <script type="text/javascript">
        $(document).ready(function () {
            $("#searchField").keyup(function () {
                var search = $("#searchField").val();
                var pageNumber = $("#pageNumber").val();
                $.ajax({
                    url: '@(Url.Action("GetAsync", "Employee"))?searchString= ' + search + '&pageNumber=' + pageNumber ?? 1,
                    contentType: 'application/html; charset=utf-8',
                    type: 'GET',
                    dataType: 'html',
                    success: function (result) {
                        $('#employees').html(result);
                    },
                    error: function (xhr, status) {
                        alert(status);
                    }
                });
            });
        });
    </script>
}