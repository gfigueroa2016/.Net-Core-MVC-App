@model PaginatedList<Web.Client.Models.Employee>

<h1>Employees</h1>

<form>
    <p>
        Employee: <input type="text" name="search" id="search" />
    </p>
</form>
<br>
<div>
    <a asp-action="Create">Create</a>
</div>
<br>

<partial name="_GetEmployees" />

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a id="previous-button" value="@(Model.PageIndex - 1)"
   class="btn btn-default carousel-item-prev">
    Previous
</a>
<a id="next-button" value="@(Model.PageIndex + 1)"
   class="btn btn-default carousel-item-next">
    Next
</a>

@section Scripts
{
    <script type="text/javascript">
        $(document).ready(function () {
            var search = $("#search");
            var previous = $("#previous-button");
            var next = $("#next-button");
            var searchString = search.val();
            search.keyup(function (e) {
                var code = e.keyCode || e.which;
                if (code == 13) {
                    e.preventDefault();
                    return false;
                }
                var employees = $('#employees');
                $.ajax({
                    cache: false,
                    type: 'GET',
                    url: '@(Url.Action("GetAsync", "Employee"))',
                    data: {'search': searchString, 'page': 1},
                    success: function (data) {
                        employees.html('');
                        employees.html(data);
                    },
                    error: function (xhr, status) {
                        alert(status);
                    }
                });
            });
            previous.on('click', function () {
                $.ajax({
                    cache: false,
                    type: 'GET',
                    url: '@(Url.Action("GetAsync", "Employee"))',
                    data: {'search': searchString, 'page': previous.val()},
                    success: function (data) {
                        employees.html('');
                        employees.html(data);
                    },
                    error: function (xhr, status) {
                        alert(status);
                    }
                });
            });
            next.on('click', function () {
                $.ajax({
                    cache: false,
                    type: 'GET',
                    url: '@(Url.Action("GetAsync", "Employee"))',
                    data: {'search': searchString, 'page': next.val()},
                    success: function (data) {
                        employees.html('');
                        employees.html(data);
                    },
                    error: function (xhr, status) {
                        alert(status);
                    }
                });
            });
        });
    </script>
}